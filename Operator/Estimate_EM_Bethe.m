function [psi, term_scale] = Estimate_EM_Bethe(Input, obj, m_z_plus, v_z_plus)
  In = Input.In;
  Out = Input.Out;
  quan_step = Out.quan_step;
  y = obj.y;
  p = Out.p;
  MAX_TERM = Out.MAX_TERM;
  M = Input.M * Input.N;

  y_vector = Real_Matrix(y);

  q_up  = y_vector + quan_step / 2;
  q_low = y_vector - quan_step / 2;

  [pos1, ~] = find(y_vector == max(p));
  [pos2, ~] = find(y_vector == min(p));

  q_up(pos1)  = MAX_TERM;
  q_low(pos2) = -MAX_TERM;

  q_real_up = q_up(1 : M);
  q_imag_up = q_up(M + 1 : 2 * M);

  q_real_low = q_low(1 : M);
  q_imag_low = q_low(M + 1 : 2 * M);

  m_z_plus = Real_Matrix(m_z_plus);
  m_real_z_plus = m_z_plus(1 : M);
  m_imag_z_plus = m_z_plus(M + 1 : 2 * M);

  v_z_plus_vector = [v_z_plus/2; v_z_plus/2];
  v_real_z_plus = v_z_plus_vector(1 : M);
  v_imag_z_plus = v_z_plus_vector(M + 1 : 2 * M);

  x0 = 0.1;

  options = optimoptions('fsolve','Display','none');

  term_scale = 0;

  var_rho = @(psii) max(1e-7, psii ./ 2 + v_z_plus ./ 2);

  beta_real_low = @(psii) ...
    ( ...
      q_real_low - m_real_z_plus ...
    ) ...
    ./ ...
    ( ...
      sqrt( var_rho(psii) ) ...
    );

  beta_real_up = @(psii) ...
    ( ...
      q_real_up - m_real_z_plus ...
    ) ...
    ./ ...
    ( ...
      sqrt( var_rho(psii) ) ...
    );

  beta_imag_low = @(psii) ...
    ( ...
      q_imag_low - m_imag_z_plus ...
    ) ...
    ./ ...
    ( ...
      sqrt( var_rho(psii) ) ...
    );

  beta_imag_up = @(psii) ...
    ( ...
      q_imag_up - m_imag_z_plus ...
    ) ...
    ./ ...
    ( ...
      sqrt( var_rho(psii) ) ...
    );

  C_real = @(psii) ...
    ( ...
      normcdf( beta_real_up(psii) ) ...
      - ...
      normcdf( beta_real_low(psii) ) ...
    );

  C_imag = @(psii) ...
    ( ...
      normcdf( beta_imag_up(psii) ) ...
      - ...
      normcdf( beta_imag_low(psii) ) ...
    );

  fun = @(psii) ...
    ( ...
      beta_real_low(psii) .* normpdf( beta_real_low(psii) ) ...
      - ...
      beta_real_up(psii)  .* normpdf( beta_real_up(psii) ) ...
    ) ...
    ./ ...
    ( ...
      C_real(psii) ...
    ) ...
    + ...
    ( ...
      beta_imag_low(psii) .* normpdf( beta_imag_low(psii) ) ...
      - ...
      beta_imag_up(psii)  .* normpdf( beta_imag_up(psii) ) ...
    ) ...
    ./ ...
    ( ...
      C_imag(psii) ...
    );

  funfun = @(psii) sum(fun(psii));

  psi = fsolve(funfun, x0, options);

end